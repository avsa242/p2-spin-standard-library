{
    --------------------------------------------
    Filename: VGA-AdjTimings.spin2
    Description: Utility for adjusting VGA driver display
        timings while displaying a simple test pattern
    Author: Jesse Burt
    Copyright (c) 2022
    Started: Jun 21, 2020
    Updated: Oct 16, 2022
    See end of file for terms of use.
    --------------------------------------------
}
CON

    _clkfreq        = cfg._clkfreq_def
    _xtlfreq        = cfg._xtlfreq

' -- User-modifiable constants
    SER_BAUD        = 2_000_000
' --

OBJ

    cfg:    "boardcfg.p2eval"
    ser:    "com.serial.terminal.ansi"
    vga:    "display.vga.bitmap-8bpp" | BASEPIN=32, VF=10, VB=33, HF=16, HS=96, HB=48, HV=640, ...
                                        INTENSITY=127
    ' NOTE: Timings can also be changed with set_timings() (before calling driver start() )

PUB main() | ch, vf, vb, hf, hs, hb, hv

    vf := vga.VF
    vb := vga.VB
    hf := vga.HF
    hs := vga.HS
    hb := vga.HB
    hv := vga.HV

    setup()
    vga.clear()

    ser.pos_xy(0, 3)
    ser.strln(@"Keys:")
    ser.strln(@"   VF   VB   HF   HS   HB   HV")
    ser.strln(@"+  q    w    e    r    t    y")
    ser.strln(@"-  a    s    d    f    g    h")
    ser.strln(@"<SPACE> resets all to defaults")

    repeat
        vga.box(0, 0, vga.XMAX, vga.YMAX, 255)
        vga.line(0, 0, vga.XMAX, vga.YMAX, 255)
        vga.line(vga.XMAX, 0, 0, vga.YMAX, 255)
        vga.circle(vga.CENTERX, vga.CENTERY, vga.YMAX/2, 255)

        ser.pos_xy(0, 10)
        ser.printf(@"vga.set_timings(%d, %d, %d, %d, %d, %d)", vf, vb, hf, hs, hb, hv)

        case ser.getchar()
            "q": vf++
            "a": vf--
            "w": vb++
            "s": vb--
            "e": hf++
            "d": hf--
            "r": hs++
            "f": hs--
            "t": hb++
            "g": hb--
            "y": hv++
            "h": hv--
            " ":
                vf := vga.VF
                vb := vga.VB
                hf := vga.HF
                hs := vga.HS
                hb := vga.HS
                hv := vga.HV
            other:
                next

        { timings are read on driver startup - re-cycle the driver
            when changes are made }
        vga.stop()
        vga.set_timings(vf, vb, hf, hs, hb, hv)
        vga.start()
        vga.wait_vsync()
        vga.show()
    repeat

PUB setup()

    ser.start(SER_BAUD)
    ser.clear()
    ser.printf(@"Serial terminal started - p2 @ %dMHz\n\r", (clkfreq/1000000))

    vga.defaults()                              ' *** must be called before starting the driver
    vga.start()
    ser.strln(@"VGA 8bpp driver started")
    vga.clear()

DAT
{
Copyright 2023 Jesse Burt

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}
