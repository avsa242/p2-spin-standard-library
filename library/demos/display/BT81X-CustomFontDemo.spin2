{
    --------------------------------------------
    Filename: BT81X-CustomFontDemo.spin2
    Author: Jesse Burt
    Description: Demo of the BT81X driver custom font functionality (P2 version)
        * upload font to EVE RAM, display test text
    Copyright (c) 2024
    Started Jul 15, 2023
    Updated Jan 1, 2024
    See end of file for terms of use.
    --------------------------------------------

    NOTE: Currently, only legacy format font files generated by Bridgetek's
        EVE asset builder are supported.

    Usage:
        1) Convert an OpenType or TrueType font to an EVE-compatible font file using
            Bridgetek's EVE asset builder ('Font converter' tab)
            a) select file from input font file
            b) select destination in output folder
            c) set font size to output (one per file)
            d) select Unicode font encoding
            e) select bitmap format (L1: lowest quality/small file, L8: highest quality/large file)
            f) set Address of font data to RAM_G+0
            g) select BT81X EVE chip
            h) select EVE command CMD_SETFONT2
            i) select first printable character of font
            j) select input character: 'Range'
            k) click select range, choose 2
            l) click 'Convert'
        2) Put the .raw file in the same directory as this program
        3) Change the filename defined the DAT block before with the filename
        4) Change the font_file_sz symbol to the size of the file
        5) Set other I/O configuration below as appropriate
}
DAT

    font_data       file "FontFile.raw"         ' Generate with EVE Asset Builder
    font_file_sz    long 10_000                 ' size of the above file, in bytes
    ' NOTE: This font file must be small enough to fit in Propeller RAM alongside the application

CON

    _clkfreq    = cfg._clkfreq_def
    _xtlfreq    = cfg._xtlfreq

' -- User-defined constants
    BRIGHTNESS  = 50                            ' Initial brightness (0..128)

' Uncomment one of the following, depending on your display size/resolution
'   NOTE: WIDTH, HEIGHT, XMAX, YMAX, CENTERX, CENTERY symbols are defined
'   in the display timings file.
#include "eve3-lcdtimings.800x480.spinh"
'#include "eve3-lcdtimings.480x272.spinh"
'#include "eve3-lcdtimings.320x240.spinh"
'#include "eve3-lcdtimings.320x102.spinh"
' --

OBJ

    cfg:    "boardcfg.p2eval"
    ser:    "com.serial.terminal.ansi" | SER_BAUD=2_000_000
    time:   "time"
    lcd:    "display.lcd.bt81x" | CS=0, SCK=1, MOSI=2, MISO=3, RST=-1, SPI_FREQ=10_000_000
'   NOTE: Pull RST high (or tie to Propeller reset) and define as -1 if unused

VAR

    byte _eve_error[129]

PUB main() | font_nr, font_first_ch

    setup()

    font_nr := 1                                ' EVE font 'handle' (0..31)
    font_first_ch := 32                         ' first printable char in the font (usually 32)
    lcd.setup_font(0, font_file_sz, @font_data, 1, font_first_ch)

    lcd.dl_start()
    lcd.clear_color(0, 0, 0)
    lcd.clear()
    lcd.color_rgb24($ff_ff_ff)
    lcd.str(0, 0, 1, 0, @"This is a test of your custom font")

    if ( lcd.coproc_err() )
        { see if there was an error with any of the above, and if so, print it to the
            serial terminal }
        lcd.rd_err(@_eve_error)
        ser.strln(@_eve_error)
    lcd.dl_end()
    repeat

PUB setup()

    ser.start()
    ser.clear()
    ser.strln(@"Serial terminal started")

    if ( lcd.start(@_disp_setup) )
        ser.strln(@"BT81x driver started")
        lcd.preset_high_perf()                       ' defaults, but max clock
        lcd.set_brightness(BRIGHTNESS)
    else
        ser.strln(@"BT81x driver failed to start - halting")
        repeat

DAT
{
Copyright 2024 Jesse Burt

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}

