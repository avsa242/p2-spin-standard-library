{
    --------------------------------------------
    Filename: time.spin2
    Author: Jesse Burt
    Description: Basic time/delay functions
    Started 2006
    Updated Mar 6, 2022
    See end of file for terms of use.
    --------------------------------------------

    NOTE: This object is based on a subset of Clock.spin,
    originally by Jeff Martin
}

CON

    { limits }
    WMIN        = 160 'XXX TBD                  ' waitcnt() overhead minimum

    { misc time unit symbols }
    SECOND_US   = 1_000_000
    SECOND_MS   = 1_000
    SECOND      = 1
    MINUTE      = (60 * SECOND)
    HOUR        = (60 * MINUTE)
    DAY         = (24 * HOUR)

VAR

    long sync

PUB Sleep(secs)
{{
    Sleep for `secs` seconds.
}}

    waitx(clkfreq * secs - 400 #> WMIN)

PUB MSleep(msecs)
{{
    Sleep for `msecs` milliseconds.
}}
    waitms(msecs)

PUB USleep(usecs)
{{
    Sleep for `usecs` microseconds.
}}
    waitus(usecs)

PUB SetSync()
{{
    Set starting point for synchronized time delays.
    Wait for the start of the next window with `WaitForSync`.
}}

    sync := getcnt

PUB WaitForSync(secs)
{{
    Wait until start of the next `secs`-long time period.

    Must call `SetSync` before calling `WaitForSync` the first time.
}}
    _waitx((sync += clkfreq * secs) #> WMIN)

