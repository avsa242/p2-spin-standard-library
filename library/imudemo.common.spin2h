{
    --------------------------------------------
    Filename: imudemo-common.spin2h
    Author: Jesse Burt
    Description: IMU demo - code common to all drivers (P2 version)
    Copyright (c) 2022
    Started Jul 12, 2022
    Updated Jul 21, 2022
    See end of file for terms of use.
    --------------------------------------------
}
PUB AccelData() | axis, a[3], sign
' Display accelerometer data
    repeat until imu.acceldataready()
    imu.accelg(@a[imu.X_AXIS], @a[imu.Y_AXIS], @a[imu.Z_AXIS])
    ser.str(@"Accel (g):  ")
    repeat axis from imu.X_AXIS to imu.Z_AXIS
        if (a[axis] < 0)
            sign := "-"
        else
            sign := " "
        ser.printf(@"%c%d.%06.6d     ", sign, abs(a[axis]/1_000_000), {
}       abs(a[axis]//1_000_000))
    ser.newline()

PUB Calibrate()
' Calibrate/set bias offsets
    if (imu.ACCEL_DOF)
        ser.position(0, 8)
        ser.str(@"Calibrating accelerometer...")
        imu.calibrateaccel()
        ser.position(0, 8)
        ser.clearline()

    if (imu.GYRO_DOF)
        ser.position(0, 8)
        ser.str(@"Calibrating gyroscope...")
        imu.calibrategyro()
        ser.position(0, 8)
        ser.clearline()

    if (imu.MAG_DOF)
        ser.position(0, 8)
        ser.str(@"Calibrating magnetometer...")
        imu.calibratemag()
        ser.position(0, 8)
        ser.clearline()

PUB Demo() | i

    ser.position(0, 4)
    repeat i from 0 to 2
        ser.positionx(12+(16*i))
        ser.char(i+"X")

    repeat
        ser.position(0, 5)
        if (imu.ACCEL_DOF)
            acceldata()
        if (imu.GYRO_DOF)
            gyrodata()
        if (imu.MAG_DOF)
            magdata()
        if (ser.rxcheck() == "c")
            calibrate()

PUB GyroData() | axis, g[3], sign
' Display gyroscope data
    repeat until imu.gyrodataready()
    imu.gyrodps(@g[imu.X_AXIS], @g[imu.Y_AXIS], @g[imu.Z_AXIS])
    ser.str(@"Gyro (dps): ")
    repeat axis from imu.X_AXIS to imu.Z_AXIS
        if (g[axis] < 0)
            sign := "-"
        else
            sign := " "
        ser.printf(@"%c%d.%06.6d     ", sign, abs(g[axis]/1_000_000), {
}       abs(g[axis]//1_000_000))
    ser.newline()

PUB MagData() | axis, m[3], sign
' Display magnetometer data
    repeat until imu.magdataready()
    imu.maggauss(@m[imu.X_AXIS], @m[imu.Y_AXIS], @m[imu.Z_AXIS])
    ser.str(@"Mag (Gs):   ")
    repeat axis from imu.X_AXIS to imu.Z_AXIS
        if (m[axis] < 0)
            sign := "-"
        else
            sign := " "
        ser.printf(@"%c%d.%06.6d     ", sign, abs(m[axis]/1_000_000), {
}       abs(m[axis]//1_000_000))
    ser.newline()

DAT
{
TERMS OF USE: MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
}

